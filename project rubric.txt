
https://review.udacity.com/#!/rubrics/3521/view

PROJECT SPECIFICATION
Adventure Game

Code Review

CRITERIA
MEETS SPECIFICATIONS
Output text to the console.

Descriptions are printed to the console for the player to see.

Import modules and use functions from those modules.

The time.sleep function is used to create delays between messages so that they aren't all printed at once.

The random.choice or random.randint function is used to influence the game so that each game is different in some way.

Use the input function in combination with conditional statements (e.g., if and while) to create an interactive program.

The input function is used to ask the player what they would like to do.

The player's choices affect what happens in the game, including:

Whether the player wins or loses
Whether to restart or exit after the game is over
Use a conditional loop to handle invalid input.

If the player enters a choice that is not valid, the game gives them the chance to retry until they enter a valid option.

The game does not crash and does not treat invalid input as a valid choice.

Refactor code by defining and calling functions.

The code includes at least four function definitions that are used to improve the code in some way, such as by:

Reducing repetition
Reducing complexity
Improving the readability or organization of the code
Each function should have a single purpose and a name that describes that purpose.

Write code that follows the standard Python style guide.

The pycodestyle tool reports zero errors and zero warnings.

Test code and produce an error-free program.

The program is a playable game, and runs from start to finish without crashing or displaying errors.

Suggestions to Make Your Project Stand Out!
If you'd like to personalize your project submission and make it stand out, here are some things you can try:

Identify all repetitive parts and refactor them into functions.
Reduce redundancy by applying the DRY principle.
Use intuitive function names and avoid generic names to provide clear context.
Avoid using global variables in the functions.